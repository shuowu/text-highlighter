{"version":3,"file":"bundle.es.js","sources":["../src/dom/addClass.js","../src/dom/append.js","../src/dom/color.js","../src/dom/contains.js","../src/dom/fromHTML.js","../src/dom/getDocument.js","../src/dom/getWindow.js","../src/dom/getSelection.js","../src/dom/getRange.js","../src/dom/insertAfter.js","../src/dom/insertBefore.js","../src/constants.js","../src/dom/normalizeTextNodes.js","../src/dom/parents.js","../src/dom/prepend.js","../src/dom/remove.js","../src/dom/removeAllRanges.js","../src/dom/removeClass.js","../src/dom/unwrap.js","../src/dom/wrap.js","../src/utils/bindEvents.js","../src/utils/defaults.js","../src/utils/sortByDepth.js","../src/utils/isHighlight.js","../src/utils/haveSameColor.js","../src/utils/flattenNestedHighlights.js","../src/utils/groupHighlights.js","../src/utils/mergeSiblingHighlights.js","../src/utils/unique.js","../src/utils/normalizeHighlights.js","../src/utils/refineRangeBoundaries.js","../src/utils/unbindEvents.js","../src/TextHighlighter.js"],"sourcesContent":["/**\n * Adds class to element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {string} className\n */\n\nexport default function (el, className) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    el.className += ` ${className}`;\n  }\n}\n","/**\n * Appends child nodes to base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {Node[]} nodesToAppend\n */\nexport default function (el, nodesToAppend) {\n  const nodes = Array.prototype.slice.call(nodesToAppend);\n\n  for (let i = 0, len = nodes.length; i < len; ++i) {\n    el.appendChild(nodes[i]);\n  }\n}\n","/**\n * Returns element background color.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {CSSStyleDeclaration.backgroundColor}\n */\nexport default function (el) {\n  return el.style.backgroundColor;\n}\n","/**\n * Returns true if base element contains given child.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {Node|HTMLElement} child\n * @returns {boolean}\n */\nexport default function (el, child) {\n  return el !== child && el.contains(child);\n}\n","/**\n * Creates dom element from given html string.\n * @param {string} html\n * @returns {NodeList}\n */\nexport default function (html) {\n  const div = document.createElement('div');\n  div.innerHTML = html;\n  return div.childNodes;\n}\n","/**\n * Returns document of the base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {HTMLDocument}\n */\nexport default function (el) {\n  // if ownerDocument is null then el is the document itself.\n  return el.ownerDocument || el;\n}\n","import getDocument from './getDocument';\n\n/**\n * Returns window of the base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {Window}\n */\nexport default function (el) {\n  return getDocument(el).defaultView;\n}\n","import getWindow from './getWindow';\n\n/**\n * Returns selection object of the window of base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {Selection}\n */\nexport default function (el) {\n  return getWindow(el).getSelection();\n}\n","import getSelection from './getSelection';\n\n/**\n * Returns first range of the window of base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {Range}\n */\nexport default function (el) {\n  const selection = getSelection(el);\n  let range;\n\n  if (selection.rangeCount > 0) {\n    range = selection.getRangeAt(0);\n  }\n\n  return range;\n}\n","/**\n * Inserts base element after refEl.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {Node} refEl - node after which base element will be inserted\n * @returns {Node} - inserted element\n */\nexport default function (el, refEl) {\n  return refEl.parentNode.insertBefore(el, refEl.nextSibling);\n}\n","/**\n * Inserts base element before refEl.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {Node} refEl - node before which base element will be inserted\n * @returns {Node} - inserted element\n */\nexport default function (el, refEl) {\n  return refEl.parentNode.insertBefore(el, refEl);\n}\n","export const NODE_TYPE = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n};\n\n/**\n * Attribute added by default to every highlight.\n * @type {string}\n */\nexport const DATA_ATTR = 'data-highlighted';\n\n/**\n * Attribute used to group highlight wrappers.\n * @type {string}\n */\nexport const TIMESTAMP_ATTR = 'data-timestamp';\n\n\n/**\n * Don't highlight content of these tags.\n * @type {string[]}\n */\nexport const IGNORE_TAGS = [\n  'SCRIPT', 'STYLE', 'SELECT', 'OPTION', 'BUTTON', 'OBJECT', 'APPLET', 'VIDEO', 'AUDIO', 'CANVAS', 'EMBED',\n  'PARAM', 'METER', 'PROGRESS',\n];\n","import { NODE_TYPE } from '../constants';\n\nconst { TEXT_NODE } = NODE_TYPE;\n\n/**\n * Normalizes text nodes within base element, ie. merges sibling text nodes and assures that every\n * element node has only one text node.\n * It should does the same as standard element.normalize, but IE implements it incorrectly.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n */\nfunction normalizeTextNodes(el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.nodeType === TEXT_NODE) {\n    while (el.nextSibling && el.nextSibling.nodeType === TEXT_NODE) {\n      el.nodeValue += el.nextSibling.nodeValue;\n      el.parentNode.removeChild(el.nextSibling);\n    }\n  } else {\n    normalizeTextNodes(el.firstChild);\n  }\n  normalizeTextNodes(el.nextSibling);\n}\n\nexport default normalizeTextNodes;\n","/**\n * Returns array of base element parents.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {HTMLElement[]}\n */\nexport default function (el) {\n  let parent;\n  const path = [];\n\n  while (el.parentNode) {\n    parent = el.parentNode;\n    path.push(parent);\n    el = parent;\n  }\n\n  return path;\n}\n","/**\n * Prepends child nodes to base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {Node[]} nodesToPrepend\n */\nexport default function (el, nodesToPrepend) {\n  const nodes = Array.prototype.slice.call(nodesToPrepend);\n  let i = nodes.length;\n\n  while (i--) {\n    el.insertBefore(nodes[i], el.firstChild);\n  }\n}\n","/**\n * Removes base element from DOM.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n */\nexport default function (el) {\n  el.parentNode.removeChild(el);\n  el = null;\n}\n","/**\n * Removes all ranges of the window of base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n */\nexport default function (el) {\n  const selection = getSelection(el);\n  selection.removeAllRanges();\n}\n","/**\n * Removes class from element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {string} className\n */\nexport default function (el, className) {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(\n      new RegExp(`(^|\\\\b)${className}(\\\\b|$)`, 'gi'), ' ',\n    );\n  }\n}\n","import insertBefore from './insertBefore';\nimport remove from './remove';\n\n/**\n * Unwraps base element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @returns {Node[]} - child nodes of unwrapped element.\n */\nexport default function (el) {\n  const nodes = Array.prototype.slice.call(el.childNodes);\n  let wrapper;\n\n  nodes.forEach((node) => {\n    wrapper = node.parentNode;\n    insertBefore(wrapper, node.parentNode);\n    remove(wrapper);\n  });\n\n  return nodes;\n}\n","/**\n * Wraps base element in wrapper element.\n * @param {Node|HTMLElement} [el] - base DOM element to manipulate\n * @param {HTMLElement} wrapper\n * @returns {HTMLElement} wrapper element\n */\nexport default function (el, wrapper) {\n  if (el.parentNode) {\n    el.parentNode.insertBefore(wrapper, el);\n  }\n\n  wrapper.appendChild(el);\n  return wrapper;\n}\n","export default function bindEvents(el, scope) {\n  el.addEventListener('mouseup', scope.highlightHandler.bind(scope));\n  el.addEventListener('touchend', scope.highlightHandler.bind(scope));\n}\n","\n/**\n * Fills undefined values in obj with default properties with the same name from source object.\n * @param {object} obj - target object\n * @param {object} source - source object with default values\n * @returns {object}\n */\nexport default function defaults(obj, source) {\n  obj = obj || {};\n\n  Object.keys(source).forEach((prop) => {\n    obj[prop] = source[prop];\n  });\n\n  return obj;\n}\n","import { parents } from '../dom';\n\n/**\n * Sorts array of DOM elements by its depth in DOM tree.\n * @param {HTMLElement[]} arr - array to sort.\n * @param {boolean} descending - order of sort.\n */\nexport default function sortByDepth(arr, descending) {\n  arr.sort((a, b) => parents(descending ? b : a).length - parents(descending ? a : b).length);\n}\n","import { NODE_TYPE, DATA_ATTR } from '../constants';\n\n/**\n * Returns true if element is a highlight.\n * All highlights have 'data-highlighted' attribute.\n * @param el - element to check.\n * @returns {boolean}\n */\nexport default function isHighlight(el) {\n  return el && el.nodeType === NODE_TYPE.ELEMENT_NODE && el.hasAttribute(DATA_ATTR);\n}\n","import { color } from '../dom';\n\n/**\n * Returns true if elements a i b have the same color.\n * @param {Node} a\n * @param {Node} b\n * @returns {boolean}\n */\nexport default function haveSameColor(a, b) {\n  return color(a) === color(b);\n}\n","import sortByDepth from './sortByDepth';\nimport isHighlight from './isHighlight';\nimport haveSameColor from './haveSameColor';\nimport { remove, insertAfter, insertBefore } from '../dom';\n\n/**\n * Flattens highlights structure.\n * Note: this method changes input highlights -\n * their order and number after calling this method may change.\n * @param {Array} highlights - highlights to flatten.\n */\nexport default function (highlights) {\n  let again;\n\n  sortByDepth(highlights, true);\n\n  function flattenOnce() {\n    let shouldAgain = false;\n\n    highlights.forEach((hl, i) => {\n      const parent = hl.parentElement;\n      const parentPrev = parent.previousSibling;\n      const parentNext = parent.nextSibling;\n\n      if (isHighlight(parent)) {\n        if (!haveSameColor(parent, hl)) {\n          if (!hl.nextSibling) {\n            insertBefore(hl, parentNext || parent);\n            shouldAgain = true;\n          }\n\n          if (!hl.previousSibling) {\n            insertAfter(hl, parentPrev || parent);\n            shouldAgain = true;\n          }\n\n          if (!parent.hasChildNodes()) {\n            remove(parent);\n          }\n        } else {\n          parent.replaceChild(hl.firstChild, hl);\n          highlights[i] = parent;\n          shouldAgain = true;\n        }\n      }\n    });\n\n    return shouldAgain;\n  }\n\n  do {\n    again = flattenOnce();\n  } while (again);\n}\n","import { TIMESTAMP_ATTR } from '../constants';\n\n/**\n * Groups given highlights by timestamp.\n * @param {Array} highlights\n * @returns {Array} Grouped highlights.\n */\nexport default function groupHighlights(highlights) {\n  const order = [];\n  const chunks = {};\n  const grouped = [];\n\n  highlights.forEach((hl) => {\n    const timestamp = hl.getAttribute(TIMESTAMP_ATTR);\n\n    if (typeof chunks[timestamp] === 'undefined') {\n      chunks[timestamp] = [];\n      order.push(timestamp);\n    }\n\n    chunks[timestamp].push(hl);\n  });\n\n  order.forEach((timestamp) => {\n    const group = chunks[timestamp];\n\n    grouped.push({\n      chunks: group,\n      timestamp,\n      toString() {\n        return group.map((h) => h.textContent).join('');\n      },\n    });\n  });\n\n  return grouped;\n}\n","import haveSameColor from './haveSameColor';\nimport isHighlight from './isHighlight';\nimport {\n  prepend, append, remove, normalizeTextNodes,\n} from '../dom';\nimport { NODE_TYPE } from '../constants';\n\n\n/**\n * Merges sibling highlights and normalizes descendant text nodes.\n * Note: this method changes input highlights -\n * their order and number after calling this method may change.\n * @param highlights\n */\nexport default function (highlights) {\n  function shouldMerge(current, node) {\n    return node && node.nodeType === NODE_TYPE.ELEMENT_NODE\n          && haveSameColor(current, node)\n          && isHighlight(node);\n  }\n\n  highlights.forEach((highlight) => {\n    const prev = highlight.previousSibling;\n    const next = highlight.nextSibling;\n\n    if (shouldMerge(highlight, prev)) {\n      prepend(highlight, prev.childNodes);\n      remove(prev);\n    }\n    if (shouldMerge(highlight, next)) {\n      append(highlight, next.childNodes);\n      remove(next);\n    }\n\n    normalizeTextNodes(highlight);\n  });\n}\n","/**\n * Returns array without duplicated values.\n * @param {Array} arr\n * @returns {Array}\n */\nexport default function unique(arr) {\n  return arr.filter((value, idx, self) => self.indexOf(value) === idx);\n}\n","import flattenNestedHighlights from './flattenNestedHighlights';\nimport mergeSiblingHighlights from './mergeSiblingHighlights';\nimport unique from './unique';\n\n/**\n * Normalizes highlights. Ensures that highlighting is done with use of the smallest\n * possible number of wrapping HTML elements.\n * Flattens highlights structure and merges sibling highlights. Normalizes text nodes\n * within highlights.\n * @param {Array} highlights - highlights to normalize.\n * @returns {Array} - array of normalized highlights.\n *  Order and number of returned highlights may be different than input highlights.\n */\nexport default function (highlights) {\n  let normalizedHighlights;\n\n  flattenNestedHighlights(highlights);\n  mergeSiblingHighlights(highlights);\n\n  // omit removed nodes\n  normalizedHighlights = highlights.filter((hl) => (hl.parentElement ? hl : null));\n\n  normalizedHighlights = unique(normalizedHighlights);\n  normalizedHighlights.sort((a, b) => a.offsetTop - b.offsetTop || a.offsetLeft - b.offsetLeft);\n\n  return normalizedHighlights;\n}\n","import { NODE_TYPE } from '../constants';\n\nconst { TEXT_NODE } = NODE_TYPE;\n\n/**\n * Takes range object as parameter and refines it boundaries\n * @param range\n * @returns {object} refined boundaries and initial state of highlighting algorithm.\n */\nexport default function refineRangeBoundaries(range) {\n  let { startContainer } = range;\n  let { endContainer } = range;\n  const ancestor = range.commonAncestorContainer;\n  let goDeeper = true;\n\n  if (range.endOffset === 0) {\n    while (!endContainer.previousSibling && endContainer.parentNode !== ancestor) {\n      endContainer = endContainer.parentNode;\n    }\n    endContainer = endContainer.previousSibling;\n  } else if (endContainer.nodeType === TEXT_NODE) {\n    if (range.endOffset < endContainer.nodeValue.length) {\n      endContainer.splitText(range.endOffset);\n    }\n  } else if (range.endOffset > 0) {\n    endContainer = endContainer.childNodes.item(range.endOffset - 1);\n  }\n\n  if (startContainer.nodeType === TEXT_NODE) {\n    if (range.startOffset === startContainer.nodeValue.length) {\n      goDeeper = false;\n    } else if (range.startOffset > 0) {\n      startContainer = startContainer.splitText(range.startOffset);\n      if (endContainer === startContainer.previousSibling) {\n        endContainer = startContainer;\n      }\n    }\n  } else if (range.startOffset < startContainer.childNodes.length) {\n    startContainer = startContainer.childNodes.item(range.startOffset);\n  } else {\n    startContainer = startContainer.nextSibling;\n  }\n\n  return {\n    startContainer,\n    endContainer,\n    goDeeper,\n  };\n}\n","export default function unbindEvents(el, scope) {\n  el.removeEventListener('mouseup', scope.highlightHandler.bind(scope));\n  el.removeEventListener('touchend', scope.highlightHandler.bind(scope));\n}\n","import {\n  addClass,\n  removeClass,\n  getRange,\n  removeAllRanges,\n  contains,\n  wrap,\n  unwrap,\n  remove,\n  fromHTML,\n  getWindow,\n} from './dom';\nimport {\n  defaults,\n  bindEvents,\n  unbindEvents,\n  refineRangeBoundaries,\n  sortByDepth,\n  groupHighlights,\n  normalizeHighlights,\n} from './utils';\nimport {\n  TIMESTAMP_ATTR, NODE_TYPE, IGNORE_TAGS, DATA_ATTR,\n} from './constants';\n\nclass TextHighlighter {\n  /**\n   * Creates wrapper for highlights.\n   * TextHighlighter instance calls this method each time\n   * it needs to create highlights and pass options retrieved\n   * in constructor.\n   * @param {object} options - the same object as in TextHighlighter constructor.\n   * @returns {HTMLElement}\n   * @static\n   */\n  static createWrapper(options) {\n    const span = document.createElement('span');\n    span.style.backgroundColor = options.color;\n    span.className = options.highlightedClass;\n    return span;\n  }\n\n  /**\n   * Creates TextHighlighter instance and binds to given DOM elements.\n   * @param {HTMLElement} element - DOM element to which highlighted will be applied.\n   * @param {object} [options] - additional options.\n   * @param {string} options.color - highlight color.\n   * @param {string} options.highlightedClass - class added to highlight, 'highlighted' by default.\n   * @param {string} options.contextClass - class added to element to which highlighter is applied,\n   *  'highlighter-context' by default.\n   * @param {function} options.onRemoveHighlight - function called before highlight is removed.\n   *  Highlight is passed as param. Function should return true if highlight should be removed,\n   *  or false - to prevent removal.\n   * @param {function} options.onBeforeHighlight - function called before highlight is created.\n   *  Range object is passed as param. Function should return true to continue processing,\n   *  or false - to prevent highlighting.\n   * @param {function} options.onAfterHighlight - function called after highlight is created.\n   *  Array of created wrappers is passed as param.\n   */\n  constructor(element, options) {\n    if (!element) {\n      throw new Error('Missing anchor element');\n    }\n\n    this.el = element;\n    this.options = defaults(options, {\n      color: '#ffff7b',\n      highlightedClass: 'highlighted',\n      contextClass: 'highlighter-context',\n      onRemoveHighlight() { return true; },\n      onBeforeHighlight() { return true; },\n      onAfterHighlight() { },\n    });\n\n    addClass(this.el, this.options.contextClass);\n    bindEvents(this.el, this);\n  }\n\n  /**\n   * Permanently disables highlighting.\n   * Unbinds events and remove context element class.\n   */\n  destroy() {\n    unbindEvents(this.el, this);\n    removeClass(this.el, this.options.contextClass);\n  }\n\n  highlightHandler() {\n    this.doHighlight();\n  }\n\n  /**\n   * Highlights current range.\n   * @param {boolean} keepRange - Don't remove range after highlighting. Default: false.\n   */\n  doHighlight(keepRange) {\n    const range = getRange(this.el);\n    let wrapper;\n    let createdHighlights;\n    let normalizedHighlights;\n    let timestamp;\n\n    if (!range || range.collapsed) {\n      return;\n    }\n\n    if (this.options.onBeforeHighlight(range) === true) {\n      timestamp = +new Date();\n      wrapper = TextHighlighter.createWrapper(this.options);\n      wrapper.setAttribute(TIMESTAMP_ATTR, timestamp);\n\n      createdHighlights = this.highlightRange(range, wrapper);\n      normalizedHighlights = normalizeHighlights(createdHighlights);\n\n      this.options.onAfterHighlight(range, normalizedHighlights, timestamp);\n    }\n\n    if (!keepRange) {\n      removeAllRanges(this.el);\n    }\n  }\n\n  /**\n   * Highlights range.\n   * Wraps text of given range object in wrapper element.\n   * @param {Range} range\n   * @param {HTMLElement} wrapper\n   * @returns {Array} - array of created highlights.\n   */\n  highlightRange(range, wrapper) {\n    if (!range || range.collapsed) {\n      return [];\n    }\n\n    const result = refineRangeBoundaries(range);\n    const { startContainer } = result;\n    const { endContainer } = result;\n    let { goDeeper } = result;\n    let done = false;\n    let node = startContainer;\n    const highlights = [];\n    let highlight;\n    let wrapperClone;\n    let nodeParent;\n\n    do {\n      if (goDeeper && node.nodeType === NODE_TYPE.TEXT_NODE) {\n        if (IGNORE_TAGS.indexOf(node.parentNode.tagName) === -1 && node.nodeValue.trim() !== '') {\n          wrapperClone = wrapper.cloneNode(true);\n          wrapperClone.setAttribute(DATA_ATTR, true);\n          nodeParent = node.parentNode;\n\n          // highlight if a node is inside the el\n          if (contains(this.el, nodeParent) || nodeParent === this.el) {\n            highlight = wrap(node, wrapperClone);\n            highlights.push(highlight);\n          }\n        }\n\n        goDeeper = false;\n      }\n      if (node === endContainer && !(endContainer.hasChildNodes() && goDeeper)) {\n        done = true;\n      }\n\n      if (node.tagName && IGNORE_TAGS.indexOf(node.tagName) > -1) {\n        if (endContainer.parentNode === node) {\n          done = true;\n        }\n        goDeeper = false;\n      }\n      if (goDeeper && node.hasChildNodes()) {\n        node = node.firstChild;\n      } else if (node.nextSibling) {\n        node = node.nextSibling;\n        goDeeper = true;\n      } else {\n        node = node.parentNode;\n        goDeeper = false;\n      }\n    } while (!done);\n\n    return highlights;\n  }\n\n  /**\n   * Sets highlighting color.\n   * @param {string} color - valid CSS color.\n   */\n  setColor(color) {\n    this.options.color = color;\n  }\n\n  /**\n   * Returns highlighting color.\n   * @returns {string}\n   */\n  getColor() {\n    return this.options.color;\n  }\n\n\n  /**\n   * Removes highlights from element. If element is a highlight itself, it is removed as well.\n   * If no element is given, all highlights all removed.\n   * @param {HTMLElement} [element] - element to remove highlights from\n   */\n  removeHighlights(element) {\n    const container = element || this.el;\n    const highlights = this.getHighlights({ container });\n    const self = this;\n\n    function mergeSiblingTextNodes(textNode) {\n      const prev = textNode.previousSibling;\n      const next = textNode.nextSibling;\n\n      if (prev && prev.nodeType === NODE_TYPE.TEXT_NODE) {\n        textNode.nodeValue = prev.nodeValue + textNode.nodeValue;\n        remove(prev);\n      }\n      if (next && next.nodeType === NODE_TYPE.TEXT_NODE) {\n        textNode.nodeValue += next.nodeValue;\n        remove(next);\n      }\n    }\n\n    function removeHighlight(highlight) {\n      const textNodes = unwrap(highlight);\n\n      textNodes.forEach((node) => {\n        mergeSiblingTextNodes(node);\n      });\n    }\n\n    sortByDepth(highlights, true);\n\n    highlights.forEach((hl) => {\n      if (self.options.onRemoveHighlight(hl) === true) {\n        removeHighlight(hl);\n      }\n    });\n  }\n\n  /**\n   * Returns highlights from given container.\n   * @param params\n   * @param {HTMLElement} [params.container] - return highlights from this element.\n   * Default: the element the highlighter is applied to.\n   * @param {boolean} [params.andSelf] - if set to true and container is a highlight itself,\n   * add container to returned results. Default: true.\n   * @param {boolean} [params.grouped] - if set to true,\n   * highlights are grouped in logical groups of highlights added in the same moment.\n   * Each group is an object which has got array of highlights, 'toString' method and 'timestamp'\n   * property. Default: false.\n   * @returns {Array} - array of highlights.\n   */\n  getHighlights(params) {\n    params = defaults(params, {\n      container: this.el,\n      andSelf: true,\n      grouped: false,\n    });\n\n    const nodeList = params.container.querySelectorAll(`[${DATA_ATTR}]`);\n    let highlights = Array.prototype.slice.call(nodeList);\n\n    if (params.andSelf === true && params.container.hasAttribute(DATA_ATTR)) {\n      highlights.push(params.container);\n    }\n\n    if (params.grouped) {\n      highlights = groupHighlights(highlights);\n    }\n\n    return highlights;\n  }\n\n  /**\n   * Serializes all highlights in the element the highlighter is applied to.\n   * @returns {string} - stringified JSON with highlights definition\n   */\n  serializeHighlights() {\n    const highlights = this.getHighlights();\n    const refEl = this.el;\n    const hlDescriptors = [];\n\n    function getElementPath(el, refElement) {\n      const path = [];\n      let childNodes;\n\n      do {\n        childNodes = Array.prototype.slice.call(el.parentNode.childNodes);\n        path.unshift(childNodes.indexOf(el));\n        el = el.parentNode;\n      } while (el !== refElement || !el);\n\n      return path;\n    }\n\n    sortByDepth(highlights, false);\n\n    highlights.forEach((highlight) => {\n      let offset = 0; // Hl offset from previous sibling within parent node.\n      const { length } = highlight.textContent;\n      const hlPath = getElementPath(highlight, refEl);\n      let wrapper = highlight.cloneNode(true);\n\n      wrapper.innerHTML = '';\n      wrapper = wrapper.outerHTML;\n\n      if (highlight.previousSibling && highlight.previousSibling.nodeType === NODE_TYPE.TEXT_NODE) {\n        offset = highlight.previousSibling.length;\n      }\n\n      hlDescriptors.push([\n        wrapper,\n        highlight.textContent,\n        hlPath.join(':'),\n        offset,\n        length,\n      ]);\n    });\n\n    return JSON.stringify(hlDescriptors);\n  }\n\n  /**\n   * Deserializes highlights.\n   * @throws exception when can't parse JSON or JSON has invalid structure.\n   * @param {object} json - JSON object with highlights definition.\n   * @returns {Array} - array of deserialized highlights.\n   */\n  deserializeHighlights(json) {\n    let hlDescriptors;\n    const highlights = [];\n    const self = this;\n\n    if (!json) {\n      return highlights;\n    }\n\n    try {\n      hlDescriptors = JSON.parse(json);\n    } catch (e) {\n      throw new Error(`Can't parse JSON: ${e}`);\n    }\n\n    function deserializationFn(hlDescriptor) {\n      const hl = {\n        wrapper: hlDescriptor[0],\n        text: hlDescriptor[1],\n        path: hlDescriptor[2].split(':'),\n        offset: hlDescriptor[3],\n        length: hlDescriptor[4],\n      };\n      let elIndex = hl.path.pop();\n      let node = self.el;\n      let idx;\n\n      // eslint-disable-next-line no-cond-assign\n      while (idx = hl.path.shift()) {\n        node = node.childNodes[idx];\n      }\n\n      if (node.childNodes[elIndex - 1]\n          && node.childNodes[elIndex - 1].nodeType === NODE_TYPE.TEXT_NODE) {\n        elIndex -= 1;\n      }\n\n      node = node.childNodes[elIndex];\n      const hlNode = node.splitText(hl.offset);\n      hlNode.splitText(hl.length);\n\n      if (hlNode.nextSibling && !hlNode.nextSibling.nodeValue) {\n        remove(hlNode.nextSibling);\n      }\n\n      if (hlNode.previousSibling && !hlNode.previousSibling.nodeValue) {\n        remove(hlNode.previousSibling);\n      }\n\n      const highlight = wrap(hlNode, fromHTML(hl.wrapper)[0]);\n      highlights.push(highlight);\n    }\n\n    hlDescriptors.forEach((hlDescriptor) => {\n      try {\n        deserializationFn(hlDescriptor);\n      } catch (e) {\n        if (console && console.warn) {\n          console.warn(`Can't deserialize highlight descriptor. Cause: ${e}`);\n        }\n      }\n    });\n\n    return highlights;\n  }\n\n  /**\n   * Finds and highlights given text.\n   * @param {string} text - text to search for\n   * @param {boolean} [caseSensitive] - if set to true,\n   *  performs case sensitive search (default: true)\n   */\n  find(text, caseSensitive) {\n    const wnd = getWindow(this.el);\n    const { scrollX } = wnd;\n    const { scrollY } = wnd;\n    const caseSens = (typeof caseSensitive === 'undefined' ? true : caseSensitive);\n\n    removeAllRanges(this.el);\n\n    if (wnd.find) {\n      while (wnd.find(text, caseSens)) {\n        this.doHighlight(true);\n      }\n    } else if (wnd.document.body.createTextRange) {\n      const textRange = wnd.document.body.createTextRange();\n      textRange.moveToElementText(this.el);\n      while (textRange.findText(text, 1, caseSens ? 4 : 0)) {\n        if (!contains(this.el, textRange.parentElement())\n            && textRange.parentElement() !== this.el) {\n          break;\n        }\n\n        textRange.select();\n        this.doHighlight(true);\n        textRange.collapse(false);\n      }\n    }\n\n    removeAllRanges(this.el);\n    wnd.scrollTo(scrollX, scrollY);\n  }\n}\n\nexport default TextHighlighter;\n"],"names":["el","className","classList","add","nodesToAppend","nodes","Array","prototype","slice","call","i","len","length","appendChild","style","backgroundColor","child","contains","html","div","document","createElement","innerHTML","childNodes","ownerDocument","getDocument","defaultView","getWindow","getSelection","selection","range","rangeCount","getRangeAt","refEl","parentNode","insertBefore","nextSibling","NODE_TYPE","ELEMENT_NODE","TEXT_NODE","DATA_ATTR","TIMESTAMP_ATTR","IGNORE_TAGS","normalizeTextNodes","nodeType","nodeValue","removeChild","firstChild","parent","path","push","nodesToPrepend","removeAllRanges","remove","replace","RegExp","wrapper","forEach","node","bindEvents","scope","addEventListener","highlightHandler","bind","defaults","obj","source","Object","keys","prop","sortByDepth","arr","descending","sort","a","b","parents","isHighlight","hasAttribute","haveSameColor","color","highlights","again","flattenOnce","shouldAgain","hl","parentElement","parentPrev","previousSibling","parentNext","insertAfter","hasChildNodes","replaceChild","groupHighlights","order","chunks","grouped","timestamp","getAttribute","group","toString","map","h","textContent","join","shouldMerge","current","highlight","prev","next","prepend","append","unique","filter","value","idx","self","indexOf","normalizedHighlights","flattenNestedHighlights","mergeSiblingHighlights","offsetTop","offsetLeft","refineRangeBoundaries","startContainer","endContainer","ancestor","commonAncestorContainer","goDeeper","endOffset","splitText","item","startOffset","unbindEvents","removeEventListener","TextHighlighter","options","span","highlightedClass","element","Error","contextClass","onRemoveHighlight","onBeforeHighlight","onAfterHighlight","addClass","removeClass","doHighlight","keepRange","getRange","createdHighlights","collapsed","Date","createWrapper","setAttribute","highlightRange","normalizeHighlights","result","done","wrapperClone","nodeParent","tagName","trim","cloneNode","wrap","container","getHighlights","mergeSiblingTextNodes","textNode","removeHighlight","textNodes","unwrap","params","andSelf","nodeList","querySelectorAll","hlDescriptors","getElementPath","refElement","unshift","offset","hlPath","outerHTML","JSON","stringify","json","parse","e","deserializationFn","hlDescriptor","text","split","elIndex","pop","shift","hlNode","fromHTML","console","warn","caseSensitive","wnd","scrollX","scrollY","caseSens","find","body","createTextRange","textRange","moveToElementText","findText","select","collapse","scrollTo"],"mappings":"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"}